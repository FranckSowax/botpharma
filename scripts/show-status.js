#!/usr/bin/env node

/**
 * Script d'affichage du statut du projet BOT PHARMA
 * Usage: node scripts/show-status.js
 */

const fs = require('fs');
const path = require('path');

const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  dim: '\x1b[2m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m',
  white: '\x1b[37m',
  bgGreen: '\x1b[42m',
  bgBlue: '\x1b[44m',
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function header(text) {
  const line = '‚ïê'.repeat(70);
  log(`\n${line}`, 'cyan');
  log(`  ${text}`, 'bright');
  log(`${line}`, 'cyan');
}

function section(title) {
  log(`\n${title}`, 'blue');
  log('‚îÄ'.repeat(70), 'dim');
}

function checkmark(text, status = true) {
  const symbol = status ? '‚úì' : '‚è≥';
  const color = status ? 'green' : 'yellow';
  log(`  ${symbol} ${text}`, color);
}

async function showStatus() {
  header('BOT PHARMA - STATUT DU PROJET');

  // V√©rifier si .env existe
  const envExists = fs.existsSync(path.join(__dirname, '..', '.env'));
  
  // V√©rifier si node_modules existe
  const nodeModulesExists = fs.existsSync(path.join(__dirname, '..', 'node_modules'));

  section('üìä PROGRESSION GLOBALE');
  log('  Phase 1 : Backend Infrastructure       ', 'green');
  log('  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100%', 'green');
  log('');
  log('  Phase 2 : WhatsApp Integration         ', 'green');
  log('  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100% (code existant)', 'green');
  log('');
  log('  Phase 3 : AI Recommendations           ', 'green');
  log('  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100% (code existant)', 'green');
  log('');
  log('  Phase 4 : Dashboard Next.js            ', 'yellow');
  log('  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   0%', 'dim');
  log('');
  log('  Phase 5 : Post-Purchase Automation     ', 'yellow');
  log('  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   0%', 'dim');
  log('');
  log('  üéØ TOTAL : ~60% COMPL√âT√â', 'cyan');

  section('‚úÖ CE QUI EST FAIT');
  checkmark('Structure du projet cr√©√©e', true);
  checkmark('856 packages npm install√©s', nodeModulesExists);
  checkmark('Base de donn√©es con√ßue (12 tables)', true);
  checkmark('Migrations SQL pr√™tes (3 fichiers)', true);
  checkmark('Code backend et WhatsApp', true);
  checkmark('Code IA (GPT-4o)', true);
  checkmark('Documentation compl√®te', true);
  checkmark('Scripts de test cr√©√©s', true);
  checkmark('Fichier .env cr√©√©', envExists);

  section('‚è≥ √Ä FAIRE (Configuration)');
  checkmark('Configurer Supabase', false);
  checkmark('Remplir les variables d\'environnement', false);
  checkmark('Appliquer les migrations', false);
  checkmark('Tester la connexion', false);
  checkmark('Initialiser les donn√©es de test', false);

  section('üìö DOCUMENTATION DISPONIBLE');
  log('  üìÑ QUICK_START.md              - D√©marrage rapide (25 min)', 'white');
  log('  üìÑ SUPABASE_SETUP_GUIDE.md     - Configuration Supabase', 'white');
  log('  üìÑ PHASE_1_COMPLETE.md         - R√©sum√© de la Phase 1', 'white');
  log('  üìÑ SETUP_INSTRUCTIONS.md       - Instructions compl√®tes', 'white');
  log('  üìÑ PROJECT_STATUS.md           - √âtat d\'avancement', 'white');
  log('  üìÅ documentation/              - Sp√©cifications techniques', 'white');

  section('üöÄ PROCHAINES √âTAPES');
  log('  1. Lire QUICK_START.md', 'cyan');
  log('  2. Configurer Supabase (voir SUPABASE_SETUP_GUIDE.md)', 'cyan');
  log('  3. Remplir le fichier .env', 'cyan');
  log('  4. Ex√©cuter : npx supabase db push', 'cyan');
  log('  5. Tester : node scripts/test-supabase.js', 'cyan');
  log('  6. D√©marrer : npm run dev', 'cyan');

  section('‚ö° COMMANDES RAPIDES');
  log('  npm run dev                    # D√©marrer le serveur', 'white');
  log('  npm run supabase:start         # Supabase local', 'white');
  log('  npx supabase db push           # Appliquer migrations', 'white');
  log('  node scripts/test-supabase.js  # Tester connexion', 'white');

  section('üìä STATISTIQUES');
  log('  üì¶ Packages npm : 856', 'white');
  log('  üóÑÔ∏è  Tables DB : 12', 'white');
  log('  üìù Lignes de code : 2000+', 'white');
  log('  üìÑ Fichiers cr√©√©s : 30+', 'white');
  log('  üîê Politiques RLS : 20+', 'white');
  log('  ‚öôÔ∏è  Fonctions SQL : 5', 'white');

  header('‚ú® PHASE 1 TERMIN√âE - PR√äT POUR LA CONFIGURATION');

  log('\nüí° Conseil : Commencez par lire QUICK_START.md\n', 'yellow');
}

showStatus().catch(console.error);
